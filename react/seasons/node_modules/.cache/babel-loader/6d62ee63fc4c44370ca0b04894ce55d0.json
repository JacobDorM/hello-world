{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dor\\\\Desktop\\\\Self-develop\\\\enterprenuer\\\\web developer\\\\WebDevelopmentBootcamp\\\\projects\\\\visual studio code\\\\React and Redux\\\\seasons copy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport default (function () {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  useEffect(function () {\n    window.navigator.geolocation.getCurrentPosition(function (position) {\n      return setLat(position.coords.latitude);\n    }, function (err) {\n      return setErrorMessage(err.message);\n    });\n  }, []);\n  return [lat, errorMessage];\n});","map":{"version":3,"sources":["C:\\Users\\Dor\\Desktop\\Self-develop\\enterprenuer\\web developer\\WebDevelopmentBootcamp\\projects\\visual studio code\\React and Redux\\seasons copy\\src\\useLocation.js"],"names":["useState","useEffect","lat","setLat","errorMessage","setErrorMessage","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","message"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,YAAM;AAAA,kBACKD,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,MACVE,GADU;AAAA,MACLC,MADK;;AAAA,mBAEuBH,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,MAEVI,YAFU;AAAA,MAEIC,eAFJ;;AAIjBJ,EAAAA,SAAS,CAAC,YAAM;AAChBK,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAAAC,QAAQ;AAAA,aAAIP,MAAM,CAACO,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAV;AAAA,KADZ,EAEI,UAAAC,GAAG;AAAA,aAAIR,eAAe,CAACQ,GAAG,CAACC,OAAL,CAAnB;AAAA,KAFP;AAIC,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACZ,GAAD,EAAME,YAAN,CAAP;AACH,CAZD","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default () => {\r\n    const [lat, setLat] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        position => setLat(position.coords.latitude),\r\n        err => setErrorMessage(err.message)\r\n    );\r\n    }, []);\r\n\r\n    return [lat, errorMessage];\r\n};"]},"metadata":{},"sourceType":"module"}