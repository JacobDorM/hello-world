{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dor\\\\Desktop\\\\Self-develop\\\\enterprenuer\\\\web developer\\\\WebDevelopmentBootcamp\\\\projects\\\\visual studio code\\\\React and Redux\\\\Section23\\\\translate\\\\src\\\\contexts\\\\LanguageContext.js\";\nimport React from 'react';\nconst Context = React.createContext('english');\nexport class LanguageStore extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: 'english'\n    };\n\n    this.onLanguageChange = language => {\n      this.setState({\n        language\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: { ...this.state,\n        onLanguageChange: this.onLanguageChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\nexport default Context;","map":{"version":3,"sources":["C:/Users/Dor/Desktop/Self-develop/enterprenuer/web developer/WebDevelopmentBootcamp/projects/visual studio code/React and Redux/Section23/translate/src/contexts/LanguageContext.js"],"names":["React","Context","createContext","LanguageStore","Component","state","language","onLanguageChange","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,aAAN,CAAoB,SAApB,CAAhB;AAEA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADuC;;AAAA,SAG/CC,gBAH+C,GAG3BD,QAAD,IAAc;AAC7B,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KAL8C;AAAA;;AAO/CG,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKJ,KAAV;AAAiBE,QAAAA,gBAAgB,EAAE,KAAKA;AAAxC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKG,KAAL,CAAWC,QADhB,CADJ;AAKH;;AAb8C;AAgBnD,eAAeV,OAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext('english');\r\n\r\nexport class LanguageStore extends React.Component {\r\n    state = { language: 'english' };\r\n\r\n    onLanguageChange = (language) => {\r\n        this.setState({ language });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Context.Provider value={{ ...this.state, onLanguageChange: this.onLanguageChange }}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Context;"]},"metadata":{},"sourceType":"module"}