{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dor\\\\Desktop\\\\Self-develop\\\\web developer\\\\WebDevelopmentBootcamp\\\\projects\\\\visual studio code\\\\React and Redux\\\\Section16\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.i, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/Dor/Desktop/Self-develop/web developer/WebDevelopmentBootcamp/projects/visual studio code/React and Redux/Section16/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","i","componentDidMount","id","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAKpCC,QALoC,GAKzBC,UAAU,IAAI;AACrB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,CAA9C,EAAiDJ,UAAjD;AACH,KAPmC;AAAA;;AACpCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBG,EAA/C;AACH;;AAMDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKN,KAAL,CAAWO,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEjB,CAAC,CAACkB,IAAF,CAAO,KAAKR,KAAL,CAAWO,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CAA3B;AAA8E,MAAA,QAAQ,EAAE,KAAKT,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAnBmC;;AAsBxC,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBG,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component{\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = formValues => {\r\n        this.props.editStream(this.props.match.params.i, formValues);\r\n    };\r\n\r\n    render() {\r\n        if(!this.props.stream){\r\n            return <div>Loading...</div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm initialValues={_.pick(this.props.stream, 'title', 'description')} onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    \r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}