{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dor\\\\Desktop\\\\Self-develop\\\\enterprenuer\\\\web developer\\\\ReactTut\\\\tic-tac-toe\\\\src\\\\components\\\\Game.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport \"./Game.css\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      place: [null, null],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (this.props.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.props.calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      if (step.squares[move]) {\n        if (move < 3) {\n          this.setState({\n            place: [0, move]\n          });\n        } else if (move < 6) {\n          this.setState({\n            place: [1, move - 3]\n          });\n        } else {\n          this.setState({\n            place: [2, move - 6]\n          });\n        }\n      }\n\n      const point = this.state.place;\n      const desc = move ? \"Go to move #\" + move + \" at \" + point : \"Go to game start\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, moves)));\n  }\n\n}\n\nexport default Game; // const point = [0, 0];\n// if(i === 0){\n//   point[0] = 0\n//   point[1] = 0\n// }\n// if(i === 1){\n//   point[0] = 0\n//   point[1] = 1\n// }\n// if(i === 2){\n//   point[0] = 0\n//   point[1] = 2\n// }\n// if(i === 3){\n//   point[0] = 1\n//   point[1] = 0\n// }\n// if(i === 4){\n//   point[0] = 1\n//   point[1] = 1\n// }\n// if(i === 5){\n//   point[0] = 1\n//   point[1] = 2\n// }\n// if(i === 6){\n//   point[0] = 2\n//   point[1] = 0\n// }\n// if(i === 7){\n//   point[0] = 2\n//   point[1] = 1\n// }\n// if(i === 8){\n//   point[0] = 2\n//   point[1] = 2\n// }","map":{"version":3,"sources":["C:/Users/Dor/Desktop/Self-develop/enterprenuer/web developer/ReactTut/tic-tac-toe/src/components/Game.js"],"names":["React","Board","Game","Component","constructor","props","state","history","squares","Array","fill","place","stepNumber","xIsNext","handleClick","i","slice","current","length","calculateWinner","setState","concat","jumpTo","step","render","winner","moves","map","move","point","desc","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADX,OADO,CADE;AAMXC,MAAAA,KAAK,EAAE,CAAC,IAAD,EAAO,IAAP,CANI;AAOXC,MAAAA,UAAU,EAAE,CAPD;AAQXC,MAAAA,OAAO,EAAE;AARE,KAAb;AAUD;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,UAAMR,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBS,KAAnB,CAAyB,CAAzB,EAA4B,KAAKV,KAAL,CAAWM,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMK,OAAO,GAAGV,OAAO,CAACA,OAAO,CAACW,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMV,OAAO,GAAGS,OAAO,CAACT,OAAR,CAAgBQ,KAAhB,EAAhB;;AAEA,QAAI,KAAKX,KAAL,CAAWc,eAAX,CAA2BX,OAA3B,KAAuCA,OAAO,CAACO,CAAD,CAAlD,EAAuD;AACrD;AACD;;AAEDP,IAAAA,OAAO,CAACO,CAAD,CAAP,GAAa,KAAKT,KAAL,CAAWO,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKO,QAAL,CAAc;AACZb,MAAAA,OAAO,EAAEA,OAAO,CAACc,MAAR,CAAe,CACtB;AACEb,QAAAA,OAAO,EAAEA;AADX,OADsB,CAAf,CADG;AAMZI,MAAAA,UAAU,EAAEL,OAAO,CAACW,MANR;AAOZL,MAAAA,OAAO,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAPT,KAAd;AASD;;AAEDS,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAKH,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAEW,IADA;AAEZV,MAAAA,OAAO,EAAEU,IAAI,GAAG,CAAP,KAAa;AAFV,KAAd;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMjB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMU,OAAO,GAAGV,OAAO,CAAC,KAAKD,KAAL,CAAWM,UAAZ,CAAvB;AACA,UAAMa,MAAM,GAAG,KAAKpB,KAAL,CAAWc,eAAX,CAA2BF,OAAO,CAACT,OAAnC,CAAf;AAEA,UAAMkB,KAAK,GAAGnB,OAAO,CAACoB,GAAR,CAAY,CAACJ,IAAD,EAAOK,IAAP,KAAgB;AACxC,UAAIL,IAAI,CAACf,OAAL,CAAaoB,IAAb,CAAJ,EAAwB;AACtB,YAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,eAAKR,QAAL,CAAc;AACZT,YAAAA,KAAK,EAAE,CAAC,CAAD,EAAIiB,IAAJ;AADK,WAAd;AAGD,SAJD,MAIO,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,eAAKR,QAAL,CAAc;AACZT,YAAAA,KAAK,EAAE,CAAC,CAAD,EAAIiB,IAAI,GAAG,CAAX;AADK,WAAd;AAGD,SAJM,MAIA;AACL,eAAKR,QAAL,CAAc;AACZT,YAAAA,KAAK,EAAE,CAAC,CAAD,EAAIiB,IAAI,GAAG,CAAX;AADK,WAAd;AAGD;AACF;;AAED,YAAMC,KAAK,GAAG,KAAKvB,KAAL,CAAWK,KAAzB;AAEA,YAAMmB,IAAI,GAAGF,IAAI,GACb,iBAAiBA,IAAjB,GAAwB,MAAxB,GAAiCC,KADpB,GAEb,kBAFJ;AAGA,0BACE;AAAI,QAAA,GAAG,EAAED,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKN,MAAL,CAAYM,IAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CE,IAA3C,CADF,CADF;AAKD,KA3Ba,CAAd;AA6BA,QAAIC,MAAJ;;AACA,QAAIN,MAAJ,EAAY;AACVM,MAAAA,MAAM,GAAG,aAAaN,MAAtB;AACD,KAFD,MAEO;AACLM,MAAAA,MAAM,GAAG,mBAAmB,KAAKzB,KAAL,CAAWO,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAEI,OAAO,CAACT,OADnB;AAEE,MAAA,OAAO,EAAGO,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMgB,MAAN,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,KAAL,CAFF,CAPF,CADF;AAcD;;AAlGgC;;AAqGnC,eAAexB,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./Game.css\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      place: [null, null],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (this.props.calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = this.props.calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      if (step.squares[move]) {\r\n        if (move < 3) {\r\n          this.setState({\r\n            place: [0, move],\r\n          });\r\n        } else if (move < 6) {\r\n          this.setState({\r\n            place: [1, move - 3],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            place: [2, move - 6],\r\n          });\r\n        }\r\n      }\r\n\r\n      const point = this.state.place;\r\n\r\n      const desc = move\r\n        ? \"Go to move #\" + move + \" at \" + point\r\n        : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\n// const point = [0, 0];\r\n// if(i === 0){\r\n//   point[0] = 0\r\n//   point[1] = 0\r\n// }\r\n// if(i === 1){\r\n//   point[0] = 0\r\n//   point[1] = 1\r\n// }\r\n// if(i === 2){\r\n//   point[0] = 0\r\n//   point[1] = 2\r\n// }\r\n// if(i === 3){\r\n//   point[0] = 1\r\n//   point[1] = 0\r\n// }\r\n// if(i === 4){\r\n//   point[0] = 1\r\n//   point[1] = 1\r\n// }\r\n// if(i === 5){\r\n//   point[0] = 1\r\n//   point[1] = 2\r\n// }\r\n// if(i === 6){\r\n//   point[0] = 2\r\n//   point[1] = 0\r\n// }\r\n// if(i === 7){\r\n//   point[0] = 2\r\n//   point[1] = 1\r\n// }\r\n// if(i === 8){\r\n//   point[0] = 2\r\n//   point[1] = 2\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}