{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dor\\\\Desktop\\\\Self-develop\\\\enterprenuer\\\\web developer\\\\ReactTut\\\\tic-tac-toe\\\\src\\\\components\\\\Game.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport \"./Game.css\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        latestMoveSquare: null,\n        select: false\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (this.props.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        latestMoveSquare: i,\n        select: false\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  selectNow(current) {\n    this.setState({\n      history: current.concat([{\n        squares: current.squares,\n        latestMoveSquare: current.latestMoveSquare,\n        select: true\n      }])\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.props.calculateWinner(current.squares);\n    const bold = this.state.select ? \"b\" : \"n\";\n    const moves = history.map((step, move) => {\n      const latestMoveSquare = step.latestMoveSquare;\n      const col = 1 + latestMoveSquare % 3;\n      const row = 1 + Math.floor(latestMoveSquare / 3);\n      const desc = move ? `Go to move #${move} (${col}, ${row})` : \"Go to game start\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: bold,\n        onClick: () => {\n          this.jumpTo(move);\n          this.selectNow(current);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, moves)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/Dor/Desktop/Self-develop/enterprenuer/web developer/ReactTut/tic-tac-toe/src/components/Game.js"],"names":["React","Board","Game","Component","constructor","props","state","history","squares","Array","fill","latestMoveSquare","select","stepNumber","xIsNext","handleClick","i","slice","current","length","calculateWinner","setState","concat","selectNow","jumpTo","step","render","winner","bold","moves","map","move","col","row","Math","floor","desc","status"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./Game.css\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          latestMoveSquare: null,\r\n          select: false,\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (this.props.calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          latestMoveSquare: i,\r\n          select: false,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  selectNow(current) {\r\n    this.setState({\r\n      history: current.concat([\r\n        {\r\n          squares: current.squares,\r\n          latestMoveSquare: current.latestMoveSquare,\r\n          select: true,\r\n        },\r\n      ]),\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = this.props.calculateWinner(current.squares);\r\n    \r\n    const bold = this.state.select ? \"b\" : \"n\";\r\n\r\n    const moves = history.map((step, move) => {\r\n      const latestMoveSquare = step.latestMoveSquare;\r\n\r\n      const col = 1 + (latestMoveSquare % 3);\r\n      const row = 1 + Math.floor(latestMoveSquare / 3);\r\n      const desc = move\r\n        ? `Go to move #${move} (${col}, ${row})`\r\n        : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button className={bold} onClick={() => {this.jumpTo(move); this.selectNow(current)}}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}